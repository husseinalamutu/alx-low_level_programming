# 1 "/home/alamz/alx/alx-low_level_programming/0x06-pointers_arrays_strings/4-rev_array.c"
# 1 "/home/alamz/alx/alx-low_level_programming/0x06-pointers_arrays_strings//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/home/alamz/alx/alx-low_level_programming/0x06-pointers_arrays_strings/4-rev_array.c"
# 1 "/home/alamz/alx/alx-low_level_programming/0x06-pointers_arrays_strings/main.h" 1



char *_strcat(char *dest, char *src);

void print_number(int n);

int _putchar(char c);

void print_buffer(char *b, int size);

char *_strncat(char *dest, char *src, int n);

char *_strncpy(char *dest, char *src, int n);

int _strcmp(char *s1, char *s2);

void reverse_array(int *a, int n);

char *string_toupper(char *);

char *cap_string(char *);

char *leet(char *);

char *rot13(char *);

char *infinite_add(char *n1, char *n2, char *r, int size_r);
# 2 "/home/alamz/alx/alx-low_level_programming/0x06-pointers_arrays_strings/4-rev_array.c" 2
# 10 "/home/alamz/alx/alx-low_level_programming/0x06-pointers_arrays_strings/4-rev_array.c"
void reverse_array(int *a, int n)
{
 int i = 0;
 int *value;

 while(i <= n)
 {
  *value[i] = *a[n-i-1];
  i++;
 }
 return(*value);
}

int main(void)
{
    int a[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 98, 1024, 1337};

    print_array(a, sizeof(a) / sizeof(int));
    reverse_array(a, sizeof(a) / sizeof(int));
    print_array(a, sizeof(a) / sizeof(int));
}
